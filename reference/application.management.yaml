openapi: 3.1.0
x-stoplight:
  id: d2x4dncugtunk
info:
  title: Client Management API
  version: '1.0'
  summary: API that manages clients in Hermes SMS Gateway
  description: ''
  contact:
    name: Delfim Marime
    url: raitonbl.com
    email: delfimarime@outlook.com
servers:
  - url: 'http://localhost:3000'
paths:
  /clients:
    get:
      summary: Get Clients Page
      tags:
        - client
      responses:
        '202':
          description: Accepted
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ResponsePage'
                  - type: object
                    x-stoplight:
                      id: n1h07ldzaahqw
                    properties:
                      items:
                        type: array
                        x-stoplight:
                          id: 2ckgyca2p2few
                        items:
                          $ref: '#/components/schemas/PaginatedClient'
                          x-stoplight:
                            id: a158s3wsei6on
        '500':
          $ref: '#/components/responses/Problem'
      operationId: get-clients
      parameters:
        - $ref: ./smsc.management.yaml#/components/parameters/search
        - $ref: ./smsc.management.yaml#/components/parameters/page
        - $ref: ./smsc.management.yaml#/components/parameters/limit
        - schema:
            type: boolean
          in: query
          name: is_enabled
    post:
      summary: Add Client
      operationId: add-client
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Client'
        '422':
          description: Unprocessable Entity (WebDAV)
        '500':
          $ref: '#/components/responses/Problem'
      description: ''
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewClientRequest'
      tags:
        - client
  '/clients/{id}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    get:
      summary: Get Specific Client by Id
      tags:
        - client
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Client'
              examples: {}
        '404':
          $ref: '#/components/responses/ClientNotFound'
        '500':
          $ref: '#/components/responses/Problem'
      operationId: findClientById
      description: ''
components:
  schemas:
    ResponsePage:
      type: object
      x-stoplight:
        id: 0kpcrc9g42ugr
      required:
        - next
        - prev
      properties:
        self:
          description: Pagination link|cursor pointing to the current page.
          type: string
          format: uri
        first:
          description: Pagination link|cursor pointing to the first page.
          type: string
          format: uri
        prev:
          description: Pagination link|cursor pointing to the previous page.
          type: string
          format: uri
        next:
          description: Pagination link|cursor pointing to the next page.
          type: string
          format: uri
        last:
          description: Pagination link|cursor pointing to the last page.
          type: string
          format: uri
    Problem:
      type: object
      properties:
        type:
          type: string
          format: uri-reference
          description: |
            A URI reference that uniquely identifies the problem type only in the context of the provided API. Opposed to the specification in RFC-9457, it is neither recommended to be dereferenceable and point to a human-readable documentation nor globally unique for the problem type.
          default: 'about:blank'
          example: /some/uri-reference
        title:
          type: string
          description: |
            A short summary of the problem type. Written in English and readable for engineers, usually not suited for non technical stakeholders and not localized.
          example: some title for the error situation
        status:
          type: number
          format: int32
          description: |
            The HTTP status code generated by the origin server for this occurrence of the problem.
        detail:
          type: string
          description: |
            A human readable explanation specific to this occurrence of the problem that is helpful to locate the problem and give advice on how to proceed. Written in English and readable for engineers, usually not suited for non technical stakeholders and not localized.
          example: some description for the error situation
        instance:
          type: string
          format: uri-reference
          description: |
            A URI reference that identifies the specific occurrence of the problem, e.g. by adding a fragment identifier or sub-path to the problem type. May be used to locate the root of this problem in the source code.
          example: /some/uri-reference#specific-occurrence-context
    PaginatedEvent:
      title: PaginatedEvent
      x-stoplight:
        id: 54o1g8rnbijh0
      type: object
      properties:
        id:
          type: string
          x-stoplight:
            id: firi7mczm6od4
          format: uuid
        type:
          type: object
          x-stoplight:
            id: gtepv1clb1gd2
          properties:
            name:
              type: string
              x-stoplight:
                id: wc3bpd7cwh7fn
            audience:
              type: string
              x-stoplight:
                id: 8w7841hnb6gvv
        created_at:
          type: string
          x-stoplight:
            id: vb3kh7i1rt3cb
          format: date-time
        created_by:
          type: string
          x-stoplight:
            id: 4nqco5k95h1wg
          description: Username of the user who initiated it
        triggered_by:
          type: string
          x-stoplight:
            id: 8900qb58a738n
          description: The system used to initiate the event
      required:
        - id
        - type
        - created_at
        - triggered_by
    Event:
      title: Event
      x-stoplight:
        id: h6isufd5l43xn
      allOf:
        - $ref: '#/components/schemas/PaginatedEvent'
    PaginatedClient:
      title: PaginatedClient
      x-stoplight:
        id: ym4eddiktbn93
      type: object
      properties:
        id:
          type: string
          format: uuid
        client_id:
          type: string
          x-stoplight:
            id: fzzmhq1f633mn
        name:
          type: string
          x-stoplight:
            id: v68ps3l0asyth
        description:
          type: string
          x-stoplight:
            id: fipjp2h335gn8
        type:
          $ref: '#/components/schemas/Type'
          x-stoplight:
            id: cxiuksmxfmzu3
        is_enabled:
          type: boolean
          x-stoplight:
            id: xdjc1d0cjtzxf
      required:
        - id
        - client_id
        - name
        - type
        - is_enabled
    Client:
      title: Client
      x-stoplight:
        id: 7rpal7rrs44wh
      allOf:
        - $ref: '#/components/schemas/PaginatedClient'
        - type: object
          x-stoplight:
            id: knt5n2jb83ofd
          properties:
            created_at:
              type: string
              x-stoplight:
                id: ba9y15zilxhfz
            created_by:
              type: string
              x-stoplight:
                id: 4k7axmuo65qe2
            managed_by:
              type: object
              x-stoplight:
                id: ubcu1i81ctn01
              additionalProperties: false
              required:
                - name
              properties:
                name:
                  type: string
                  x-stoplight:
                    id: q27lfs8fyek5x
                id:
                  type: string
                  x-stoplight:
                    id: yf74jevza8exg
                  format: uuid
                server_ip:
                  type: string
                  x-stoplight:
                    id: gzebwx0rhdqyq
            callback:
              $ref: '#/components/schemas/Callback'
              x-stoplight:
                id: 3r96kv2owd3f8
    Callback:
      title: Callback
      x-stoplight:
        id: i68vyffy19j2j
      type: object
      properties:
        url:
          type: string
          x-stoplight:
            id: r5hps54ehy8si
        method:
          type: string
          x-stoplight:
            id: by8iykgjt3f5g
          enum:
            - GET
            - POST
            - PUT
            - PATCH
        request:
          type: object
          x-stoplight:
            id: fbg726v9jgiev
          properties:
            body:
              type: string
              x-stoplight:
                id: 9n75x1u1656a4
            headers:
              type:
                - object
              x-stoplight:
                id: 0mf3y8vm623dy
              additionalProperties: false
              minProperties: 1
        security:
          x-stoplight:
            id: g60s2vunqiydk
          allOf:
            - additionalProperties: false
              properties:
                type:
                  type: string
                  x-stoplight:
                    id: 73bftwvwr6ngf
                username:
                  type: string
                  x-stoplight:
                    id: hgmpt0smxd3k6
                password:
                  type: string
                  x-stoplight:
                    id: evms2m859i3pn
              required:
                - type
                - username
                - password
            - x-stoplight:
                id: wb4l1o4xdbbu2
              properties:
                type:
                  type: string
                  x-stoplight:
                    id: 9qiuvdscvxoga
                  enum:
                    - TOKEN
                header:
                  type: string
                  x-stoplight:
                    id: e5mnko8xvhq3r
                  default: Authorization
                token:
                  type: string
                  x-stoplight:
                    id: 8595fqateq62m
              required:
                - type
                - header
                - token
            - x-stoplight:
                id: m6viwae6bc0f3
              properties:
                type:
                  type: string
                  x-stoplight:
                    id: 8gq9qra3qqqtq
                client_id:
                  type: string
                  x-stoplight:
                    id: os75f5b9lk17h
                client_secret:
                  type: string
                  x-stoplight:
                    id: 3w2vqngbg458m
                token_url:
                  type: string
                  x-stoplight:
                    id: snsjnd7egpmgd
              required:
                - type
                - client_id
                - client_secret
                - token_url
          type: object
    Type:
      title: Type
      x-stoplight:
        id: 2wejkz5l3gmih
      type: string
      enum:
        - BACKEND
        - FRONTEND
    NewClientRequest:
      title: NewClientRequest
      x-stoplight:
        id: ye9lh5a6wq3mk
      type: object
      properties:
        name:
          type: string
          x-stoplight:
            id: mx46cpk6arw5o
        description:
          type: string
          x-stoplight:
            id: 6ra71rcvnflcj
        type:
          $ref: '#/components/schemas/Type'
          x-stoplight:
            id: ornm6r20otsi7
        is_enabled:
          type: boolean
          x-stoplight:
            id: 43dea7o29srj6
          default: false
        callback:
          $ref: '#/components/schemas/Callback'
          x-stoplight:
            id: bemb0gea7g4tg
      required:
        - name
        - description
        - type
        - is_enabled
  securitySchemes: {}
  parameters:
    search:
      name: s
      in: query
      required: false
      schema:
        type: string
      description: Search like
    page:
      name: page
      in: query
      required: false
      schema:
        type: number
        minimum: 1
    limit:
      name: limit
      in: query
      required: false
      schema:
        type: number
        minimum: 10
        default: 15
  responses:
    Problem:
      description: '500'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Problem'
    ClientNotFound:
      description: Example response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Problem'
          examples:
            Example 1:
              value:
                status: 404
                title: Client Not found
                type: /problems/client/not-found
                detail: 'The client[id=''${id}''] doesn''t exist'
security:
  - OpenID Connect Provider: []
tags:
  - name: client
